/*
    题目描述：
        把只包含质因子2、3和5的数称作丑数（Ugly Number）。例如6、8都是丑数，但14不是，因为它包含质因子7。
    习惯上我们把1当做是第一个丑数。求按从小到大的顺序的第N个丑数。

    思路：
        先解释下丑数，即一个丑数target = 2^x * 3^y * 5^z，
        （1）对于一个丑数p，那么p*2, p*3, p*5都是丑数，并且 p*2 < p*3 <p*5。
        （2）如果p < q, 那么2 * p < 2 * q, 3 * p < 3 * q, 3 * p < 3 * q
    由于1是最小的丑数，那么从1开始，把2 * 1, 3 * 1, 5 * 1 三个数进行比较，得出的最小的数就是1的下一个丑数，也就是 2*1，得到「2」。
    多了个「2」但是会多3个可以比较的丑数（2*2， 3*2，5*2），这时候把之前「1」生成的丑数还有「2」新增的丑数一起比较，
    即（3 * 1, 5 * 1，2 * 2， 3 * 2，5 * 2），循环下去，你会发现每增加一个丑数，会增加3个丑数进行比较。
        我们说一下较低事件复杂度的方法，其实我们只用比较3个数，「用于乘2的最小的数」、「用于乘3的最小的数」，「用于乘5的最小的
数」。用3个指针完成。


 */

function GetUglyNumber_Solution(index) {
    if(index < 7) return index; // 小于7的时候，都是丑数
    let result = [1];
    let t2 = 0, t3 = 0, t5 = 0;

    for(let i = 1; i < index; i++) {
        let min = Math.min(result[t2] * 2, result[t3] * 3, result[t5] * 5);
        if(min === result[t2] * 2) t2++;
        if(min === result[t3] * 3) t2++;
        if(min === result[t5] * 5) t2++;
    }

    return result[index - 1];

}